# Install Mariadb10.x
sudo dnf install -y mariadb105-server
sudo systemctl start mariadb
sudo systemctl enable mariadb
sudo systemctl status mariadb

# Edit Parameter File
sudo vi /etc/my.cnf.d/mariadb-server.cnf
server-id = 2  
expire_logs_days=2
binlog_format = ROW 
max_binlog_size = 1G 
log-bin =mariadb-bin
binlog_row_image=FULL
binlog_checksum=NONE
log_slave_updates=TRUE
log-bin-index =mariadb-bin.index
# gtid_mode = ON
# enforce_gtid_consistency = ON
# bind-address = 0.0.0.0

sudo systemctl stop mariadb
sudo systemctl start mariadb

sudo su
mysql
# Create Admin and Replication Users
CREATE USER 'admin_user'@'%' IDENTIFIED BY 'admin_password';
GRANT ALL PRIVILEGES ON *.* TO 'admin_user'@'%' WITH GRANT OPTION;
FLUSH PRIVILEGES;

CREATE USER 'replication_user'@'%' IDENTIFIED BY 'bigs3cret';
GRANT REPLICATION CLIENT, REPLICATION SLAVE ON *.* TO 'replication_user'@'%';
FLUSH PRIVILEGES;

# Get binlog Information
show master status;

# run this shell script

read -p "Enter the replication master username: " username
read -s -p "Enter the replication master password: " password
echo ""
read -p "Enter the replication host: " host
read -p "Enter the replication port: " port
read -p "Enter the log file name: " logFile
read -p "Enter the log position: " logPosition
echo "MySQL admin_user password below: "
mysql -u admin_user -p -e "
STOP SLAVE;
CHANGE MASTER TO MASTER_HOST='$host', MASTER_PORT=$port, MASTER_USER='$username', MASTER_PASSWORD='$password', MASTER_LOG_FILE='$logFile', MASTER_LOG_POS=$logPosition;
START SLAVE;"

# Samplle dataload
https://github.com/datacharmer/test_db.git
git@github.com:datacharmer/test_db.git
unzip test_db-master.zip
 cd test_db-master/
 mysql -t < employees.sql


Backup Steps:
https://mariadb.com/kb/en/setting-up-a-replica-with-mariabackup/
sudo su 

mariabackup --backup \
   --target-dir=/home/ec2-user/backup \
   --user=admin_user --password=admin_password
mariabackup --prepare \
   --target-dir=/home/ec2-user/backup

scp -ri "2024.pem" backup/ ec2-user@db2:/home/ec2-user

sudo systemctl stop mariadb
sudo rm -rf /var/lib/mysql/
sudo mkdir /var/lib/mysql
sudo chown -R mysql:mysql /var/lib/mysql
 
mariabackup --copy-back \
   --target-dir=/home/ec2-user/backup
   
sudo chown -R mysql:mysql /var/lib/mysql/

sudo systemctl start mariadb

cat /home/ec2-user/backup/xtrabackup_binlog_info
# run this shell script

GTIDs
If we want to use GTIDs, then we will have to first set gtid_slave_pos to the GTID coordinates that we pulled from either the xtrabackup_binlog_info file or the xtrabackup_slave_info file in the backup directory. For example:

$ cat xtrabackup_binlog_info
mariadb-bin.000096 568 0-1-2
And then we would set MASTER_USE_GTID=slave_pos in the CHANGE MASTER TO command. For example:

SET GLOBAL gtid_slave_pos = "0-1-2";
CHANGE MASTER TO 
   MASTER_HOST="dbserver1", 
   MASTER_PORT=3306, 
   MASTER_USER="repl",  
   MASTER_PASSWORD="password", 
   MASTER_USE_GTID=slave_pos;
START SLAVE;
File and Position
If we want to use the binary log file and position coordinates, then we would set MASTER_LOG_FILE and MASTER_LOG_POS in the CHANGE MASTER TO command to the file and position coordinates that we pulled; either the xtrabackup_binlog_info file or the xtrabackup_slave_info file in the backup directory, depending on whether the backup was taken from the primary or from a replica of the primary. For example:

CHANGE MASTER TO 
   MASTER_HOST="dbserver1", 
   MASTER_PORT=3306, 
   MASTER_USER="repl",  
   MASTER_PASSWORD="password", 
   MASTER_LOG_FILE='mariadb-bin.000096',
   MASTER_LOG_POS=568;
START SLAVE;


RDS Replication Setup
Connect to ec2 - db get GTID
SELECT @@gtid_current_pos;
Connect to RDS db run below -- id address to be intrnel not public
CALL mysql.rds_set_external_master_gtid ('172.31.33.85', 3306, 'replication_user', 'bigs3cret', '0-2-17', 0);
CALL mysql.rds_start_replication; 

Connect to ec2 - db get binlog info
show master status;
Connect to RDS db run below -- id address to be intrnel not public
call mysql.rds_set_external_master ('172.31.33.85', 3306,'replication_user', 'bigs3cret','mariadb-bin.000003',4828,0);
CALL mysql.rds_start_replication; 

CALL mysql.rds_stop_replication;
CALL mysql.rds_reset_external_master;
CALL mysql.rds_replica_status\G
